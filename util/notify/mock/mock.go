// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/nanobox-io/nanobox/util/notify (interfaces: Notify)

package mock_notify

import (
	gomock "github.com/golang/mock/gomock"

	fsnotify "github.com/go-fsnotify/fsnotify"
)

// Mock of Notify interface
type MockNotify struct {
	ctrl     *gomock.Controller
	recorder *_MockNotifyRecorder
}

// Recorder for MockNotify (not exported)
type _MockNotifyRecorder struct {
	mock *MockNotify
}

func NewMockNotify(ctrl *gomock.Controller) *MockNotify {
	mock := &MockNotify{ctrl: ctrl}
	mock.recorder = &_MockNotifyRecorder{mock}
	return mock
}

func (_m *MockNotify) EXPECT() *_MockNotifyRecorder {
	return _m.recorder
}

func (_m *MockNotify) Watch(_param0 string, _param1 func(*fsnotify.Event) error) error {
	ret := _m.ctrl.Call(_m, "Watch", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockNotifyRecorder) Watch(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Watch", arg0, arg1)
}
