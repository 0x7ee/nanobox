// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/nanobox-io/nanobox/util/s3 (interfaces: S3)

package mock_s3

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	http "net/http"
)

// Mock of S3 interface
type MockS3 struct {
	ctrl     *gomock.Controller
	recorder *_MockS3Recorder
}

// Recorder for MockS3 (not exported)
type _MockS3Recorder struct {
	mock *MockS3
}

func NewMockS3(ctrl *gomock.Controller) *MockS3 {
	mock := &MockS3{ctrl: ctrl}
	mock.recorder = &_MockS3Recorder{mock}
	return mock
}

func (_m *MockS3) EXPECT() *_MockS3Recorder {
	return _m.recorder
}

func (_m *MockS3) Download(_param0 string) (*http.Response, error) {
	ret := _m.ctrl.Call(_m, "Download", _param0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockS3Recorder) Download(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Download", arg0)
}

func (_m *MockS3) Request(_param0 string, _param1 string, _param2 io.Reader) (*http.Response, error) {
	ret := _m.ctrl.Call(_m, "Request", _param0, _param1, _param2)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockS3Recorder) Request(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Request", arg0, arg1, arg2)
}

func (_m *MockS3) RequestURL(_param0 string) (string, error) {
	ret := _m.ctrl.Call(_m, "RequestURL", _param0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockS3Recorder) RequestURL(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RequestURL", arg0)
}

func (_m *MockS3) Upload(_param0 string, _param1 io.Reader) error {
	ret := _m.ctrl.Call(_m, "Upload", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockS3Recorder) Upload(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Upload", arg0, arg1)
}
