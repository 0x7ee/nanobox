// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/nanobox-io/nanobox/util/print (interfaces: Print)

package mock_print

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Print interface
type MockPrint struct {
	ctrl     *gomock.Controller
	recorder *_MockPrintRecorder
}

// Recorder for MockPrint (not exported)
type _MockPrintRecorder struct {
	mock *MockPrint
}

func NewMockPrint(ctrl *gomock.Controller) *MockPrint {
	mock := &MockPrint{ctrl: ctrl}
	mock.recorder = &_MockPrintRecorder{mock}
	return mock
}

func (_m *MockPrint) EXPECT() *_MockPrintRecorder {
	return _m.recorder
}

func (_m *MockPrint) Color(_param0 string, _param1 ...interface{}) {
	_s := []interface{}{_param0}
	for _, _x := range _param1 {
		_s = append(_s, _x)
	}
	_m.ctrl.Call(_m, "Color", _s...)
}

func (_mr *_MockPrintRecorder) Color(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Color", _s...)
}

func (_m *MockPrint) Password(_param0 string) string {
	ret := _m.ctrl.Call(_m, "Password", _param0)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockPrintRecorder) Password(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Password", arg0)
}

func (_m *MockPrint) Prompt(_param0 string, _param1 ...interface{}) string {
	_s := []interface{}{_param0}
	for _, _x := range _param1 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "Prompt", _s...)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockPrintRecorder) Prompt(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Prompt", _s...)
}

func (_m *MockPrint) Silence(_param0 string) {
	_m.ctrl.Call(_m, "Silence", _param0)
}

func (_mr *_MockPrintRecorder) Silence(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Silence", arg0)
}

func (_m *MockPrint) Verbose(_param0 string) {
	_m.ctrl.Call(_m, "Verbose", _param0)
}

func (_mr *_MockPrintRecorder) Verbose(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Verbose", arg0)
}
