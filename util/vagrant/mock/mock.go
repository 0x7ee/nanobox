// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/nanobox-io/nanobox-cli/util/vagrant (interfaces: Vagrant)

package mock_vagrant

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of Vagrant interface
type MockVagrant struct {
	ctrl     *gomock.Controller
	recorder *_MockVagrantRecorder
}

// Recorder for MockVagrant (not exported)
type _MockVagrantRecorder struct {
	mock *MockVagrant
}

func NewMockVagrant(ctrl *gomock.Controller) *MockVagrant {
	mock := &MockVagrant{ctrl: ctrl}
	mock.recorder = &_MockVagrantRecorder{mock}
	return mock
}

func (_m *MockVagrant) EXPECT() *_MockVagrantRecorder {
	return _m.recorder
}

func (_m *MockVagrant) HaveImage() bool {
	ret := _m.ctrl.Call(_m, "HaveImage")
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockVagrantRecorder) HaveImage() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HaveImage")
}

func (_m *MockVagrant) Install() error {
	ret := _m.ctrl.Call(_m, "Install")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockVagrantRecorder) Install() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Install")
}

func (_m *MockVagrant) Update() error {
	ret := _m.ctrl.Call(_m, "Update")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockVagrantRecorder) Update() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Update")
}
